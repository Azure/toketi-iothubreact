// Configuration file [HOCON format]

// IoT Hub settings can be retrieved from the Azure portal at https://portal.azure.com
iothub {

  // see: "IoT Hub" >> your hub >> "Messaging" >> "Partitions"
  partitions = ${?IOTHUB_PARTITIONS}

  // see: "IoT Hub" >> your hub >> "Messaging" >> "Event Hub-compatible name"
  name = ${?IOTHUB_NAME}

  // see: "IoT Hub" >> your hub > "Messaging" >> "Event Hub-compatible endpoint"
  //      e.g. from "sb://iothub-ns-toketi-i-18552-16281e72ba.servicebus.windows.net/"
  //           use  "iothub-ns-toketi-i-18552-16281e72ba"
  namespace = ${?IOTHUB_NAMESPACE}

  // see: "IoT Hub" >> your hub >> "Shared access policies"
  // e.g. you could use the predefined "iothubowner"
  keyName = ${?IOTHUB_ACCESS_KEY_NAME}

  // see: "IoT Hub" >> your hub >> "Shared access policies" >> key name >> "Primary key"
  key = ${?IOTHUB_ACCESS_KEY_VALUE}

  // see: "IoT Hub" >> your hub > "Messaging" >> Consumer groups
  // "$Default" is predefined and is the typical scenario
  consumerGroup = "$Default"
}

iothub-stream {
  // Value expressed as a duration, e.g. 3s, 3000ms, "3 seconds", etc.
  receiverTimeout = 3s

  // How many messages to retrieve on each pull, max is 999
  receiverBatchSize = 999
}

// IoT hub stream checkpointing options
iothub-checkpointing {
  // Whether the checkpointing feature is enabled
  enabled = true

  // Checkpoints frequency (best effort), for each IoT hub partition
  // Min: 1 second, Max: 1 minute
  frequency = 15s

  // How many messages to stream before saving the position, for each IoT hub partition.
  // Since the stream position is saved in the Source, before the rest of the
  // Graph (Flows/Sinks), this provides a mechanism to replay buffered messages.
  // The value should be greater than receiverBatchSize
  countThreshold = 1000

  // Store a position if its value is older than this amount of time, ignoring the threshold.
  // For instance when the telemetry stops, this will force to write the last offset after some time.
  // Min: 1 second, Max: 1 hour. Value is rounded to seconds.
  timeThreshold = 30s

  storage {

    // Value expressed as a duration, e.g. 3s, 3000ms, "3 seconds", etc.
    rwTimeout = 5s

    backendType = "Cassandra"

    // If you use the same storage while processing multiple streams, you'll want
    // to use a distinct table/container/path in each job, to to keep state isolated
    namespace = "iothub-react-checkpoints"

    azureblob {
      // Time allowed for a checkpoint to be written, rounded to seconds (min 15, max 60)
      lease = 15s
      // Whether to use the Azure Storage Emulator
      useEmulator = false
      // Storage credentials
      protocol = "https"
      account = ${?IOTHUB_CHECKPOINT_ACCOUNT}
      key = ${?IOTHUB_CHECKPOINT_KEY}
    }

    // You can easily test this with Docker --> docker run -ip 9042:9042 --rm cassandra
    cassandra {
      cluster = "localhost:9042"
      replicationFactor = 1
    }
  }
}

// @see http://doc.akka.io/docs/akka/2.4.10/scala/logging.html
akka {
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "WARNING"
}
